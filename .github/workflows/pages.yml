# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

# **What it does**: Builds the static site and deploy to GitHub pages.
# **Why we have it**:
#   To avoid having to manually build and push the site every time.
# **Who does it impact**: The GitHub pages site.

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache `build` folder
        id: build_cache
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-node_modules-${{ secrets.CACHE_RANDOM_STRING }}-${{ hashFiles('src/**', 'static/**', 'pnpm-lock.yaml', '*config*') }}

      - name: Cache `node_modules` folder
        id: node_modules_cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ secrets.CACHE_RANDOM_STRING }}-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Setup GitHub Pages
        if: steps.build_cache.outputs.cache-hit != 'true'
        uses: actions/configure-pages@v1

      - name: Install pnpm
        if: steps.build_cache.outputs.cache-hit != 'true'
        uses: pnpm/action-setup@v2
        with:
          version: 7.9.0

      - name: Setup node
        if: steps.build_cache.outputs.cache-hit != 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 16.16.0
          cache: pnpm

      - name: Install dependencies
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Build site
        if: steps.build_cache.outputs.cache-hit != 'true'
        run: pnpm run build

      - name: Upload artifact
        if: steps.build_cache.outputs.cache-hit != 'true'
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload site directory.
          path: './build'

      - name: Deploy to GitHub Pages
        if: steps.build_cache.outputs.cache-hit != 'true'
        id: deployment
        uses: actions/deploy-pages@v1
